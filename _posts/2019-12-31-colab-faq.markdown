# 자주 묻는 질문(FAQ)

### Colaboratory란 무엇인가요?
Colaboratory는 머신러닝 교육과 연구를 위한 연구 도구입니다. Jupyter 노트 환경이므로 설치 없이도 사용할 수 있습니다.

### 어떤 브라우저가 지원되나요?
Colaboratory는 대부분의 주요 브라우저와 호환되며 특히 Chrome, Firefox, Safari의 최신 버전을 대상으로 가장 철저하게 테스트되었습니다.

### 무료로 사용할 수 있나요?
예. Colaboratory는 무료로 사용할 수 있는 연구 프로젝트입니다.

### Jupyter와 Colaboratory는 어떻게 다른가요?
Jupyter는 오픈소스 프로젝트이며 Colaboratory는 Jupyter를 기반으로 구축되었습니다. Colaboratory를 사용하면 컴퓨터에 브라우저 외에 아무것도 다운로드, 설치, 실행하지 않고도 Jupyter 노트를 사용하고 다른 사용자와 공유할 수 있습니다.

### colaboratory.jupyter.org와는 어떤 관련이 있나요?
2014년에 Google에서는 Jupyter 개발팀과 함께 Colaboratory의 초기 버전을 공개했습니다. 그 이후 Colaboratory는 Google 내부에서 사용되면서 꾸준히 발전해 왔습니다.

### 내 노트는 어디에 저장되나요? 저장한 노트를 공유할 수 있나요?
모든 Colaboratory 노트는 Google 드라이브에 저장됩니다. 또한 Colaboratory 노트는 Google 문서나 스프레드시트와 마찬가지로 공유할 수 있습니다. Colaboratory 노트의 오른쪽 상단에 있는 공유 버튼을 클릭하거나 Google 드라이브 파일 공유 안내를 따르세요.

### 내 노트를 공유하면 무엇이 공유되나요?
노트를 공유하면 텍스트, 코드, 출력 결과를 비롯한 노트의 모든 내용이 공유됩니다. 수정 > 노트 설정 > 이 노트를 저장할 때 코드 셀 출력 생략을 선택하여 코드 셀 출력이 저장되거나 공유되지 않도록 할 수 있습니다. 사용 중인 가상 머신(설정한 모든 맞춤 파일 및 라이브러리 포함)은 공유되지 않습니다. 그러므로 노트에 필요한 맞춤 라이브러리 또는 파일을 모두 설치하고 로드하는 셀을 포함하는 것이 좋습니다.

### 기존의 Jupyter/IPython 노트를 Colaboratory로 가져올 수 있나요?
예. 파일 메뉴에서 '노트 업로드'를 선택하세요.

### Python3나 R, Scala 등은 지원되나요?
Colaboratory는 Python 2.7 및 Python 3.6을 지원합니다. 또한 Google에서는 R 또는 Scala 등의 다른 Jupyter 커널 지원을 바라는 사용자가 있다는 점을 알고 있습니다. 이러한 커널을 지원할 의향은 있지만, 아직 확실한 계획은 없습니다.

### Colaboratory 노트를 검색하려면 어떻게 해야 하나요?
드라이브의 검색창을 사용하세요. 노트 뷰 왼쪽 상단에 있는 Colaboratory 로고를 클릭하면 드라이브에 저장된 노트가 모두 표시됩니다. 파일 > 최근 노트 열기를 사용하면 최근에 열었던 노트를 검색할 수 있습니다.

### 코드는 어디에서 실행되나요? 브라우저 창을 닫으면 실행 상태는 어떻게 되나요?
코드는 계정 전용 가상 머신에서 실행됩니다. 가상 머신이 한동안 유휴 상태가 되면 재활용되며 시스템에 설정된 최대 수명이 적용됩니다.

### 데이터를 다운로드하려면 어떻게 하나요?
이 안내에 따라 내가 작성한 Colaboratory 노트를 Google 드라이브에서 다운로드하거나, Colaboratory의 파일 메뉴에서 다운로드할 수 있습니다. 모든 Colaboratory 노트는 오픈소스 Jupyter 노트 형식( .ipynb)으로 저장됩니다.

### T4 GPU와 같은 하드웨어 리소스를 사용할 수 없는 이유는 무엇인가요?
사용 가능한 최고의 하드웨어는 장시간의 연산보다는 대화형 방식으로 Colaboratory를 사용하는 사용자에게 우선 제공됩니다. Colaboratory를 장시간 연산에 사용할 경우 사용 가능한 하드웨어 종류 또는 하드웨어 사용 시간이 일시적으로 제한될 수 있습니다. 많은 연산이 필요한 사용자는 Colaboratory의 UI를 로컬 런타임으로 사용하는 것이 좋습니다.
Colaboratory를 암호화폐 채굴에 사용하는 것은 전면 금지되어 있으며, 이 경우 Colaboratory 사용이 완전히 차단될 수 있습니다.

### 코드가 실행되는 가상 머신을 재설정하려면 어떻게 해야 하나요? 간혹 재설정이 불가능한 이유는 무엇인가요?
'런타임' 메뉴에 있는 '모든 런타임 재설정'을 사용하면 나에게 할당된 모든 관리 가상 머신이 원래 상태로 되돌아갑니다. 시스템 파일을 실수로 덮어썼거나 호환되지 않는 소프트웨어를 설치하여 가상 시스템의 상태가 비정상이 된 경우 도움이 됩니다. Colaboratory에서는 과도한 리소스 소모를 방지하기 위해 이 작업을 실행할 수 있는 빈도가 제한되어 있습니다. 재설정 시도에 실패했다면 나중에 다시 시도해 보세요.

### 간혹 drive.mount()가 실패하면서 '시간 초과' 메시지가 표시되는 이유와 drive.mount()로 마운트된 폴더에서 I/O 작업이 실패하는 이유는 무엇인가요?
폴더 내에 파일 또는 하위 폴더가 너무 많은 경우 Google 드라이브 작업이 시간 초과될 수 있습니다. 수천 개의 항목이 최상위 수준의 '내 드라이브' 폴더에 직접 포함되어 있는 경우 드라이브를 마운트하면 시간 초과가 발생할 수 있습니다. 시간 초과되기 이전에 실패한 시도의 상태가 로컬에 부분적으로 캐시되므로 반복해서 시도하면 성공할 수도 있습니다. 이 문제가 발생할 경우 '내 드라이브'에 직접 포함된 파일 및 폴더를 하위 폴더로 이동해 보세요. drive.mount()가 성공한 이후에 다른 폴더의 항목을 읽을 때 비슷한 문제가 발생할 수 있습니다. 많은 항목이 포함된 폴더의 항목에 액세스하면 OSError: [Errno 5] 입력/출력 오류(python 3) 또는 IOError: [Errno 5] 입력/출력 오류(python 2)와 같은 오류가 발생할 수 있습니다. 직접 포함된 항목을 하위 폴더로 이동하여 문제를 해결할 수 있습니다.
파일 또는 하위 폴더를 휴지통으로 이동하여 '삭제'하는 것으로는 충분하지 않을 수 있습니다. 이 경우 휴지통을 비워야 합니다.

### 버그를 발견했거나 질문이 있으면 누구에게 문의해야 하나요?
Colaboratory 노트를 하나 연 다음, 도움말 메뉴로 이동하여 '의견 보내기...'를 선택하세요.

### 타사 쿠키를 허용하라는 메시지가 표시되는 이유는 무엇인가요?
Colaboratory는 풍부한 출력 결과를 안전하게 표시하기 위해 HTML iframe 및 별도의 출처에서 호스팅되는 서비스 워커를 사용합니다.
브라우저가 iframe 내에서 서비스 워커를 사용하려면 타사 쿠키를 허용해야 합니다.
모든 사이트에서 타사 쿠키를 허용하고 싶지 않다면 브라우저 설정에서 호스트 이름 googleusercontent.com을 허용 목록에 등록하세요.

### 편집기 글꼴은 어떻게 바꾸나요?
Colaboratory에서는 편집기에 일반 고정 너비 글꼴을 사용합니다. 현재 사용되는 대부분의 브라우저에서 고정 너비로 사용할 글꼴 모음을 구성할 수 있습니다. 일반적인 구성방법은 다음과 같습니다.
- Firefox의 경우 Firefox 지원 문서에 나와 있는 단계에 따라 '고정 너비' 글꼴을 구성합니다.
- Chrome의 경우 'chrome://settings/fonts'로 이동하여 '고정폭 글꼴' 라벨이 있는 섹션을 수정합니다.

### Colaboratory에서 Python 2가 지원 종료되는 시점은 언제인가요?
Python 개발팀은 2020년 1월 1일 이후 Python 2가 더 이상 지원되지 않을 예정이라고 발표했습니다. 이에 따라 Colaboratory에서도 이 날짜 이후 Python 2 런타임을 곧 삭제할 예정입니다.
사용자 입장에서는 2020년 1월부터 Python 2 런타임을 지정하는 노트북은 Python 3로 자동 연결되므로 이전 코드를 실행할 경우 오류가 발생할 수 있습니다. 그러므로 중요한 노트북은 2019년이 지나기 전에 Python 3로 이전하는 것이 좋습니다.
노트북의 런타임을 변경하려면 런타임 > 런타임 유형 변경을 선택한 다음 Python 3를 선택하세요. Python 2에서 Python 3로 코드를 이전하는 방법을 알아보려면 Python 설명서에서 Python 2 코드를 Python 3로 포팅하기를 참고하시기 바랍니다.

<https://research.google.com/colaboratory/faq.html>
